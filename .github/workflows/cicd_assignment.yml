name : cicd-workflow
on :
  push:
    branches:
    - v[0-9]+.[0-9]+

jobs:
  cicd_assignment:
    name: CICD Assignment
    runs-on : ubuntu-latest
    steps:
    - name: Checkout branch
      id: checkout-branch
      uses: actions/checkout@v4
      with:
        ref: ${{github.ref_name}}
        token: ${{github.token}}
    - name: Run vulnerability Scanner
      id: vul_check
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'table'
        output: 'trivy-results.txt'
        exit-code: '1'
        severity: ${{ vars.RUN_SEVERITY_CRITICAL }}
    - name: Send custom JSON data to Slack workflow
      id: failure_slack_notification
      if: failure()
      run: echo "failure_slack_notification"
    - name: upload report to slack
      id: upload_to_slack
      if: failure()
      run: cat trivy-results.txt
    - name: Login to Docker Hub
      id: docker-login
      uses: docker/login-action@v3
      if: success()
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: build-and-push
      if: success()
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ github.sha }}
    - name: Cosign Installer
      if: success()
      id: Cosign_installer
      uses: sigstore/cosign-installer@v3.1.1
      with:
        cosign-release: 'v2.2.0'
    - name: Sign image with a key
      if: success()
      run: cosign sign --yes --key=env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
      env:
        TAGS: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ github.sha }}
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
    - name: Send custom JSON data to Slack workflow
      uses: rtCamp/action-slack-notify@v2
      if: success()
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: "*Name*: Preethi Venkittu\n*Matriculation*: A0285999U\n*Email*: e1221811@u.nus.edu\n*Git*: https://github.com/preethivenkittu/fortunes_golang\n*Image*: https://hub.docker.com/repository/docker/preethivenkat5/cicd_docker_project"
        SLACK_TITLE: Image build and signed
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
